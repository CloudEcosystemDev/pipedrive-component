{
    "title": "Pipedrive API v1",
    "docsUrl": "",
    "url": "https://developers.pipedrive.com/docs/api/v1/openapi.yaml",
    "envVars": {
        "OAUTH_CLIENT_ID": {
            "description": "OAuth Client ID"
        },
        "OAUTH_CLIENT_SECRET": {
            "description": "OAuth Client Secret"
        }
    },
    "credentials": {
        "fields": {
            "server": {
                "label": "Server",
                "viewClass": "SelectView",
                "model": [
                    "https://api.pipedrive.com/v1",
                    "--- Custom URL"
                ],
                "required": true
            },
            "otherServer": {
                "label": "Custom Server URL",
                "viewClass": "TextFieldView"
            },
            "oauth2": {
                "label": "For more information, see https://pipedrive.readme.io/docs/marketplace-oauth-authorization",
                "viewClass": "OAuthFieldView"
            },
            "auth_api_key": {
                "label": "api_token (api_key)",
                "viewClass": "TextFieldView"
            }
        },
        "oauth2": {
            "client_id": "{{OAUTH_CLIENT_ID}}",
            "client_secret": "{{OAUTH_CLIENT_SECRET}}",
            "auth_uri": "https://oauth.pipedrive.com/oauth/authorize",
            "token_uri": "https://oauth.pipedrive.com/oauth/token",
            "scopes": [
                "deals:read",
                "deals:full",
                "activities:read",
                "activities:full",
                "contacts:read",
                "contacts:full",
                "admin",
                "recents:read",
                "search:read",
                "mail:read",
                "mail:full",
                "products:read",
                "products:full",
                "users:read",
                "base",
                "phone-integration"
            ]
        }
    },
    "triggers": {
        "getActivities": {
            "main": "./lib/triggers/getActivities.js",
            "title": "Get all Activities assigned to a particular User",
            "description": "Returns all Activities assigned to a particular User.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/getActivities.in.json",
                "out": "./lib/schemas/getActivities.out.json"
            }
        },
        "getDeals": {
            "main": "./lib/triggers/getDeals.js",
            "title": "Get all deals",
            "description": "Returns all deals. For more information on how to get all deals, see <a href=\"https://pipedrive.readme.io/docs/getting-all-deals\" target=\"_blank\" rel=\"noopener noreferrer\">this tutorial</a>.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/getDeals.in.json",
                "out": "./lib/schemas/getDeals.out.json"
            }
        },
        "getFiles": {
            "main": "./lib/triggers/getFiles.js",
            "title": "Get all files",
            "description": "Returns data about all files.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/getFiles.in.json",
                "out": "./lib/schemas/getFiles.out.json"
            }
        },
        "getFilters": {
            "main": "./lib/triggers/getFilters.js",
            "title": "Get all filters",
            "description": "Returns data about all filters.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/getFilters.in.json",
                "out": "./lib/schemas/getFilters.out.json"
            }
        },
        "getGoals": {
            "main": "./lib/triggers/getGoals.js",
            "title": "Find goals",
            "description": "Returns data about goals based on criteria. For searching, append `{searchField}={searchValue}` to the URL, where `searchField` can be any one of the lowest-level fields in dot-notation (e.g. `type.params.pipeline_id`; `title`). `searchValue` should be the value you are looking for on that field. Additionally, `is_active=<true|false>` can be provided to search for only active/inactive goals. When providing `period.start`, `period.end` must also be provided and vice versa.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/getGoals.in.json",
                "out": "./lib/schemas/getGoals.out.json"
            }
        },
        "getGoalResult": {
            "main": "./lib/triggers/getGoalResult.js",
            "title": "Get result of a goal",
            "description": "Gets progress of a goal for specified period.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/getGoalResult.in.json",
                "out": "./lib/schemas/getGoalResult.out.json"
            }
        },
        "getLeads": {
            "main": "./lib/triggers/getLeads.js",
            "title": "Get all leads",
            "description": "Returns multiple Leads. Leads are sorted by the time they were created, from oldest to newest. Pagination can be controlled using `limit` and `start` query parameters. If a Lead contains custom fields, the fields' values will be included in the response in the same format as with the `Deals` endpoints. If a custom field's value hasn't been set for the Lead, it won't appear in the response. Please note that Leads do not have a separate set of custom fields, instead they inherit the custom fields' structure from Deals.\n",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/getLeads.in.json",
                "out": "./lib/schemas/getLeads.out.json"
            }
        },
        "getNotes": {
            "main": "./lib/triggers/getNotes.js",
            "title": "Get all notes",
            "description": "Returns all notes.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/getNotes.in.json",
                "out": "./lib/schemas/getNotes.out.json"
            }
        },
        "getOrganizations": {
            "main": "./lib/triggers/getOrganizations.js",
            "title": "Get all organizations",
            "description": "Returns all organizations",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/getOrganizations.in.json",
                "out": "./lib/schemas/getOrganizations.out.json"
            }
        },
        "getPersons": {
            "main": "./lib/triggers/getPersons.js",
            "title": "Get all persons",
            "description": "Returns all persons",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/getPersons.in.json",
                "out": "./lib/schemas/getPersons.out.json"
            }
        },
        "getPipelines": {
            "main": "./lib/triggers/getPipelines.js",
            "title": "Get all pipelines",
            "description": "Returns data about all pipelines",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/getPipelines.in.json",
                "out": "./lib/schemas/getPipelines.out.json"
            }
        },
        "getProducts": {
            "main": "./lib/triggers/getProducts.js",
            "title": "Get all products",
            "description": "Returns data about all Products",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/getProducts.in.json",
                "out": "./lib/schemas/getProducts.out.json"
            }
        },
        "getRecents": {
            "main": "./lib/triggers/getRecents.js",
            "title": "Get recents",
            "description": "Returns data about all recent changes occured after given timestamp.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/getRecents.in.json",
                "out": "./lib/schemas/getRecents.out.json"
            }
        },
        "getRoles": {
            "main": "./lib/triggers/getRoles.js",
            "title": "Get all roles",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/getRoles.in.json",
                "out": "./lib/schemas/getRoles.out.json"
            }
        },
        "getStages": {
            "main": "./lib/triggers/getStages.js",
            "title": "Get all stages",
            "description": "Returns data about all stages.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/getStages.in.json",
                "out": "./lib/schemas/getStages.out.json"
            }
        },
        "getTeams": {
            "main": "./lib/triggers/getTeams.js",
            "title": "Get all teams",
            "description": "Returns data about teams within the company",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/getTeams.in.json",
                "out": "./lib/schemas/getTeams.out.json"
            }
        },
        "getUsers": {
            "main": "./lib/triggers/getUsers.js",
            "title": "Get all users",
            "description": "Returns data about all users within the company",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/getUsers.in.json",
                "out": "./lib/schemas/getUsers.out.json"
            }
        },
        "getWebhooks": {
            "main": "./lib/triggers/getWebhooks.js",
            "title": "Get all webhooks",
            "description": "Returns data about all webhooks of a company.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/getWebhooks.in.json",
                "out": "./lib/schemas/getWebhooks.out.json"
            }
        }
    },
    "actions": {
        "addCallLog": {
            "main": "./lib/actions/addCallLog.js",
            "title": "Add a call log",
            "description": "Adds a new call log",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/addCallLog.in.json",
                "out": "./lib/schemas/addCallLog.out.json"
            }
        },
        "addDeal": {
            "main": "./lib/actions/addDeal.js",
            "title": "Add a deal",
            "description": "Adds a new deal. Note that you can supply additional custom fields along with the request that are not described here. These custom fields are different for each Pipedrive account and can be recognized by long hashes as keys. To determine which custom fields exists, fetch the dealFields and look for `key` values. For more information on how to add a deal, see <a href=\"https://pipedrive.readme.io/docs/creating-a-deal\" target=\"_blank\" rel=\"noopener noreferrer\">this tutorial</a>.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/addDeal.in.json",
                "out": "./lib/schemas/addDeal.out.json"
            }
        },
        "addDealFollower": {
            "main": "./lib/actions/addDealFollower.js",
            "title": "Add a follower to a deal",
            "description": "Adds a follower to a deal.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/addDealFollower.in.json",
                "out": "./lib/schemas/addDealFollower.out.json"
            }
        },
        "addDealParticipant": {
            "main": "./lib/actions/addDealParticipant.js",
            "title": "Add a participant to a deal",
            "description": "Adds a participant to a deal.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/addDealParticipant.in.json",
                "out": "./lib/schemas/addDealParticipant.out.json"
            }
        },
        "addDealProduct": {
            "main": "./lib/actions/addDealProduct.js",
            "title": "Add a product to the deal, eventually creating a new item called a deal-product",
            "description": "Adds a product to the deal.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/addDealProduct.in.json",
                "out": "./lib/schemas/addDealProduct.out.json"
            }
        },
        "addDealField": {
            "main": "./lib/actions/addDealField.js",
            "title": "Add a new deal field",
            "description": "Adds a new deal field. For more information on adding a new custom field, see <a href=\"https://pipedrive.readme.io/docs/adding-a-new-custom-field\" target=\"_blank\" rel=\"noopener noreferrer\">this tutorial</a>.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/addDealField.in.json",
                "out": "./lib/schemas/addDealField.out.json"
            }
        },
        "addFile": {
            "main": "./lib/actions/addFile.js",
            "title": "Add file",
            "description": "Lets you upload a file and associate it with Deal, Person, Organization, Activity or Product. For more information on how to add a file, see <a href=\"https://pipedrive.readme.io/docs/adding-a-file\" target=\"_blank\" rel=\"noopener noreferrer\">this tutorial</a>.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/addFile.in.json",
                "out": "./lib/schemas/addFile.out.json"
            }
        },
        "addFileAndLinkIt": {
            "main": "./lib/actions/addFileAndLinkIt.js",
            "title": "Create a remote file and link it to an item",
            "description": "Creates a new empty file in the remote location (`googledrive`) that will be linked to the item you supply. For more information on how to add a remote file, see <a href=\"https://pipedrive.readme.io/docs/adding-a-remote-file\" target=\"_blank\" rel=\"noopener noreferrer\">this tutorial</a>.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/addFileAndLinkIt.in.json",
                "out": "./lib/schemas/addFileAndLinkIt.out.json"
            }
        },
        "linkFileToItem": {
            "main": "./lib/actions/linkFileToItem.js",
            "title": "Link a remote file to an item",
            "description": "Links an existing remote file (`googledrive`) to the item you supply. For more information on how to link a remote file, see <a href=\"https://pipedrive.readme.io/docs/adding-a-remote-file\" target=\"_blank\" rel=\"noopener noreferrer\">this tutorial</a>.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/linkFileToItem.in.json",
                "out": "./lib/schemas/linkFileToItem.out.json"
            }
        },
        "addFilter": {
            "main": "./lib/actions/addFilter.js",
            "title": "Add a new filter",
            "description": "Adds a new filter, returns the ID upon success. Note that in the conditions JSON object only one first-level condition group is supported, and it must be glued with 'AND', and only two second level condition groups are supported of which one must be glued with 'AND' and the second with 'OR'. Other combinations do not work (yet) but the syntax supports introducing them in future. For more information on how to add a new filter, see <a href=\"https://pipedrive.readme.io/docs/adding-a-filter\" target=\"_blank\" rel=\"noopener noreferrer\">this tutorial</a>.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/addFilter.in.json",
                "out": "./lib/schemas/addFilter.out.json"
            }
        },
        "addGoal": {
            "main": "./lib/actions/addGoal.js",
            "title": "Add a new goal",
            "description": "Adds a new goal. Along with adding a new goal, a report is created to track the progress of your goal.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/addGoal.in.json",
                "out": "./lib/schemas/addGoal.out.json"
            }
        },
        "addLead": {
            "main": "./lib/actions/addLead.js",
            "title": "Add a lead",
            "description": "Creates a Lead. A Lead always has to be linked to a Person or an Organization or both. All Leads created through the Pipedrive API will have a Lead Source `API` assigned. Here's the tutorial for <a href=\"https://pipedrive.readme.io/docs/adding-a-lead\" target=\"_blank\" rel=\"noopener noreferrer\">adding a Lead</a>. If a Lead contains custom fields, the fields' values will be included in the response in the same format as with the `Deals` endpoints. If a custom field's value hasn't been set for the Lead, it won't appear in the response. Please note that Leads do not have a separate set of custom fields, instead they inherit the custom fields' structure from Deals. See an example given in the <a href=\"https://pipedrive.readme.io/docs/updating-custom-field-value\" target=\"_blank\" rel=\"noopener noreferrer\">updating custom fields' values tutorial</a>.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/addLead.in.json",
                "out": "./lib/schemas/addLead.out.json"
            }
        },
        "addLeadLabel": {
            "main": "./lib/actions/addLeadLabel.js",
            "title": "Add a lead label",
            "description": "Creates a Lead Label",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/addLeadLabel.in.json",
                "out": "./lib/schemas/addLeadLabel.out.json"
            }
        },
        "addNote": {
            "main": "./lib/actions/addNote.js",
            "title": "Add a note",
            "description": "Adds a new note.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/addNote.in.json",
                "out": "./lib/schemas/addNote.out.json"
            }
        },
        "addNoteComment": {
            "main": "./lib/actions/addNoteComment.js",
            "title": "Add a comment to a note",
            "description": "Adds a new comment to a note.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/addNoteComment.in.json",
                "out": "./lib/schemas/addNoteComment.out.json"
            }
        },
        "addOrganization": {
            "main": "./lib/actions/addOrganization.js",
            "title": "Add an organization",
            "description": "Adds a new organization. Note that you can supply additional custom fields along with the request that are not described here. These custom fields are different for each Pipedrive account and can be recognized by long hashes as keys. To determine which custom fields exists, fetch the organizationFields and look for `key` values. For more information on how to add an organization, see <a href=\"https://pipedrive.readme.io/docs/adding-an-organization\" target=\"_blank\" rel=\"noopener noreferrer\">this tutorial</a>.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/addOrganization.in.json",
                "out": "./lib/schemas/addOrganization.out.json"
            }
        },
        "addOrganizationFollower": {
            "main": "./lib/actions/addOrganizationFollower.js",
            "title": "Add a follower to an organization",
            "description": "Adds a follower to an organization.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/addOrganizationFollower.in.json",
                "out": "./lib/schemas/addOrganizationFollower.out.json"
            }
        },
        "addOrganizationField": {
            "main": "./lib/actions/addOrganizationField.js",
            "title": "Add a new organization field",
            "description": "Adds a new organization field. For more information on adding a new custom field, see <a href=\"https://pipedrive.readme.io/docs/adding-a-new-custom-field\" target=\"_blank\" rel=\"noopener noreferrer\">this tutorial</a>.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/addOrganizationField.in.json",
                "out": "./lib/schemas/addOrganizationField.out.json"
            }
        },
        "addOrganizationRelationship": {
            "main": "./lib/actions/addOrganizationRelationship.js",
            "title": "Create an organization relationship",
            "description": "Creates and returns an organization relationship.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/addOrganizationRelationship.in.json",
                "out": "./lib/schemas/addOrganizationRelationship.out.json"
            }
        },
        "addPerson": {
            "main": "./lib/actions/addPerson.js",
            "title": "Add a person",
            "description": "Adds a new person. Note that you can supply additional custom fields along with the request that are not described here. These custom fields are different for each Pipedrive account and can be recognized by long hashes as keys. To determine which custom fields exists, fetch the personFields and look for `key` values.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/addPerson.in.json",
                "out": "./lib/schemas/addPerson.out.json"
            }
        },
        "addPersonFollower": {
            "main": "./lib/actions/addPersonFollower.js",
            "title": "Add a follower to a person",
            "description": "Adds a follower to a person.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/addPersonFollower.in.json",
                "out": "./lib/schemas/addPersonFollower.out.json"
            }
        },
        "addPersonPicture": {
            "main": "./lib/actions/addPersonPicture.js",
            "title": "Add person picture",
            "description": "Add a picture to a person. If a picture is already set, the old picture will be replaced. Added image (or the cropping parameters supplied with the request) should have an equal width and height and should be at least 128 pixels. GIF, JPG and PNG are accepted. All added images will be resized to 128 and 512 pixel wide squares.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/addPersonPicture.in.json",
                "out": "./lib/schemas/addPersonPicture.out.json"
            }
        },
        "addPersonField": {
            "main": "./lib/actions/addPersonField.js",
            "title": "Add a new person field",
            "description": "Adds a new person field. For more information on adding a new custom field, see <a href=\"https://pipedrive.readme.io/docs/adding-a-new-custom-field\" target=\"_blank\" rel=\"noopener noreferrer\">this tutorial</a>.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/addPersonField.in.json",
                "out": "./lib/schemas/addPersonField.out.json"
            }
        },
        "addPipeline": {
            "main": "./lib/actions/addPipeline.js",
            "title": "Add a new pipeline",
            "description": "Adds a new pipeline",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/addPipeline.in.json",
                "out": "./lib/schemas/addPipeline.out.json"
            }
        },
        "addProduct": {
            "main": "./lib/actions/addProduct.js",
            "title": "Add a product",
            "description": "Adds a new product to the Products inventory. For more information on how to add a product, see <a href=\"https://pipedrive.readme.io/docs/adding-a-product\" target=\"_blank\" rel=\"noopener noreferrer\">this tutorial</a>.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/addProduct.in.json",
                "out": "./lib/schemas/addProduct.out.json"
            }
        },
        "addProductFollower": {
            "main": "./lib/actions/addProductFollower.js",
            "title": "Add a follower to a product",
            "description": "Adds a follower to a product.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/addProductFollower.in.json",
                "out": "./lib/schemas/addProductFollower.out.json"
            }
        },
        "addProductField": {
            "main": "./lib/actions/addProductField.js",
            "title": "Add a new product field",
            "description": "Adds a new product field. For more information on adding a new custom field, see <a href=\"https://pipedrive.readme.io/docs/adding-a-new-custom-field\" target=\"_blank\" rel=\"noopener noreferrer\">this tutorial</a>.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/addProductField.in.json",
                "out": "./lib/schemas/addProductField.out.json"
            }
        },
        "addRole": {
            "main": "./lib/actions/addRole.js",
            "title": "Add a role",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/addRole.in.json",
                "out": "./lib/schemas/addRole.out.json"
            }
        },
        "addRoleAssignment": {
            "main": "./lib/actions/addRoleAssignment.js",
            "title": "Add role assignment",
            "description": "Add assignment for a role",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/addRoleAssignment.in.json",
                "out": "./lib/schemas/addRoleAssignment.out.json"
            }
        },
        "addOrUpdateRoleSetting": {
            "main": "./lib/actions/addOrUpdateRoleSetting.js",
            "title": "Add or update role setting",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/addOrUpdateRoleSetting.in.json",
                "out": "./lib/schemas/addOrUpdateRoleSetting.out.json"
            }
        },
        "addStage": {
            "main": "./lib/actions/addStage.js",
            "title": "Add a new stage",
            "description": "Adds a new stage, returns the ID upon success.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/addStage.in.json",
                "out": "./lib/schemas/addStage.out.json"
            }
        },
        "addTeam": {
            "main": "./lib/actions/addTeam.js",
            "title": "Add a new team",
            "description": "Adds a new team to the company and returns the created object",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/addTeam.in.json",
                "out": "./lib/schemas/addTeam.out.json"
            }
        },
        "addTeamUser": {
            "main": "./lib/actions/addTeamUser.js",
            "title": "Add users to a team",
            "description": "Adds users to an existing team",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/addTeamUser.in.json",
                "out": "./lib/schemas/addTeamUser.out.json"
            }
        },
        "addUser": {
            "main": "./lib/actions/addUser.js",
            "title": "Add a new user",
            "description": "Adds a new user to the company, returns the ID upon success.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/addUser.in.json",
                "out": "./lib/schemas/addUser.out.json"
            }
        },
        "addWebhook": {
            "main": "./lib/actions/addWebhook.js",
            "title": "Create a new webhook",
            "description": "Creates a new webhook and returns its details. Note that specifying an event which triggers the webhook combines 2 parameters - `event_action` and `event_object`. E.g., use `*.*` for getting notifications about all events, `added.deal` for any newly added deals, `deleted.persons` for any deleted persons, etc. See <a href=\"https://pipedrive.readme.io/docs/guide-for-webhooks?ref=api_reference\">https://pipedrive.readme.io/docs/guide-for-webhooks</a> for more details.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/addWebhook.in.json",
                "out": "./lib/schemas/addWebhook.out.json"
            }
        }
    }
}